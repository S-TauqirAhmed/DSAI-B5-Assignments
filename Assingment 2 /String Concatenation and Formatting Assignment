{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d72103cd",
   "metadata": {},
   "source": [
    "## Assignment 1: String Concatenation and Formatting\n",
    "1. Create a variable `name` and assign your name to it.\n",
    "2. Create a variable `age` and assign your age to it.\n",
    "3. Create a variable `country` and assign your country of residence to it.\n",
    "4. Using the `+` operator, concatenate the variables to form a sentence in the following format: \"My name is `<name>`, I am `<age>` years old, and I live in `<country>`.\"\n",
    "5. Print the concatenated sentence."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b451dc94",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "My name is Tauqir, I am 39 years old and I live in Pakistan.\n"
     ]
    }
   ],
   "source": [
    "name=\"Tauqir\"\n",
    "age=39\n",
    "country=\"Pakistan\"\n",
    "print(\"My name is \" + name + \", \" + \"I am \" + str(age) + \" years old and I live in \" + country + \".\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad7b3dbc",
   "metadata": {},
   "source": [
    "**Assignment 2: String Formatting using `.format()`\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "1. Create a variable `item` and assign a product name to it (e.g., \"laptop\", \"book\", \"phone\").\n",
    "2. Create a variable `price` and assign a price to the item.\n",
    "3. Create a variable `quantity` and assign a quantity value.\n",
    "4. Calculate the total cost using the formula: `total_cost = price * quantity`.\n",
    "5. Using the `.format()` method, create a formatted string: \"I bought `<quantity>` `<item>`(s) at `<price>` each, for a total of $`<total_cost>`.\"\n",
    "6. Print the formatted string."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "99456da2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "I bought Laptop (s) at 40 each, for a total of $ 400.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "item=\"Laptop\"\n",
    "price=40\n",
    "qty=10\n",
    "total_cost=price*qty\n",
    "a=\"\"\"\n",
    "I bought {} (s) at {} each, for a total of $ {}.\n",
    "\"\"\".format(item,price,total_cost)\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ff880c0",
   "metadata": {},
   "source": [
    "**Assignment 3: String Interpolation using `f''`\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "1. Create a variable `city` and assign the name of a city.\n",
    "2. Create a variable `temperature` and assign a temperature value in Celsius.\n",
    "3. Using `f''` string interpolation, create a string: \"The temperature in `<city>` is `<temperature>`°C.\"\n",
    "4. Print the interpolated string."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e149b002",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The temperature in karachi is 30 C°C.\n"
     ]
    }
   ],
   "source": [
    "city=\"karachi\"\n",
    "temp=\"30 C\"\n",
    "b=f\"\"\"The temperature in {city} is {temp}°C.\"\"\"\n",
    "print(b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e252637d",
   "metadata": {},
   "outputs": [],
   "source": [
    "**Assignment 4: String Formatting using `%()`\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "1. Create a variable `first_name` and assign your first name to it.\n",
    "2. Create a variable `last_name` and assign your last name to it.\n",
    "3. Create a variable `birth_year` and assign your birth year.\n",
    "4. Calculate your age using the formula: `age = current_year - birth_year`, where `current_year` is the current year.\n",
    "5. Using `%()` string formatting, create a string: \"My name is %(first_name)s %(last_name)s. I am %(age)d years old.\"\n",
    "6. Print the formatted string."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f62d0620",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "My name is Tauqir Ahmed.I am 40 years old.\n"
     ]
    }
   ],
   "source": [
    "first_name=\"Tauqir\"\n",
    "last_name=\"Ahmed\"\n",
    "birth_year=1983\n",
    "current_year=2023\n",
    "age=current_year-birth_year\n",
    "s=\"My name is %s %s.I am %d years old.\" % (first_name,last_name,age)\n",
    "print(s)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d033e91",
   "metadata": {},
   "source": [
    "**Assignment 5: Combining Formatting Methods**\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "1. Create a variable `product` and assign a product name.\n",
    "2. Create a variable `discount` and assign a discount percentage.\n",
    "3. Create a variable `original_price` and assign an original price.\n",
    "4. Calculate the discounted price using the formula: `discounted_price = original_price * (1 - discount / 100)`.\n",
    "5. Using any combination of string formatting methods (`+`, `.format()`, `f''`, `%()`), create a descriptive string with the product name, original price, discount percentage, and discounted price.\n",
    "6. Print the descriptive string."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0dac37db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original price of the file was Rs. 100, after discount its Rs. 90.0 only.\n"
     ]
    }
   ],
   "source": [
    "product=\"file\"\n",
    "discount=10\n",
    "original_price=100\n",
    "disc_price=original_price*(1-discount/100)\n",
    "a=f\"\"\"Original price of the {product} was Rs. {original_price}, after discount its Rs. {disc_price} only.\"\"\"\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "46d33b18",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
